{"version":3,"sources":["utils/apiCalls.js","components/App/App.js","index.js"],"names":["getTeams","a","fetch","res","json","data","getPlayers","getPlayer","id","getTeam","getRoster","createTeam","team","options","method","body","JSON","stringify","headers","createPlayer","player","deletePlayer","App","handleChange","e","setState","target","name","value","setTeamsResponse","teamsResponse","setTeamResponse","state","teamNum","teamResponse","setPlayersResponse","playersResponse","setPlayerResponse","playerNum","playerResponse","setRoster","rosterNum","rosterResponse","clearTeamsResponse","clearTeamResponse","clearPlayersResponse","clearPlayerResponse","clearRoster","clearTeam","teamname","city","logoUrl","stadium","clearDelete","deletePlayerNum","deletePlayerResponse","clearPostPlayerResponses","nationality","photoUrl","preferedFoot","age","postPlayerResponses","makeTeam","postTeamResponse","makePlayer","postPlayerResponse","removePlayer","response","render","className","type","onClick","src","theme","placeholder","maxLength","onChange","clearPlayer","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9908f4aa.chunk.js","sourcesContent":["export const getTeams = async () => {\n  const res = await fetch('https://mls2019-api.herokuapp.com/api/v1/teams')\n  const data = await res.json();\n  return data\n}\n\nexport const getPlayers = async () => {\n  const res = await fetch('https://mls2019-api.herokuapp.com/api/v1/players')\n  const data = await res.json();\n  return data\n}\n\nexport const getPlayer = async (id) => {\n  const res = await fetch(`https://mls2019-api.herokuapp.com/api/v1/players/${id}`)\n  const data = await res.json();\n  return data\n}\n\nexport const getTeam = async (id) => {\n  const res = await fetch(`https://mls2019-api.herokuapp.com/api/v1/teams/${id}`)\n  const data = await res.json();\n  return data\n}\n\nexport const getRoster = async (id) => {\n  const res = await fetch(`https://mls2019-api.herokuapp.com/api/v1/teams/${id}/roster`)\n  const data = await res.json();\n  return data\n}\n\nexport const createTeam = async (team) => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(team),\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  };\n  const res = await fetch('https://mls2019-api.herokuapp.com/api/v1/teams/',options)\n  const data = await res.json();\n  return data\n}\n\nexport const createPlayer = async (player) => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(player),\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  };\n  const res = await fetch('https://mls2019-api.herokuapp.com/api/v1/players/',options)\n  const data = await res.json();\n  return data\n}\n\nexport const deletePlayer = async (id) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  }\n  const res = await fetch(`https://mls2019-api.herokuapp.com/api/v1/players/${id}`, options)\n  const data = res.json()\n  return data;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport ReactJson from 'react-json-view';\nimport {\n  getTeams,\n  getTeam,\n  getPlayers,\n  getPlayer,\n  getRoster,\n  createTeam,\n  createPlayer,\n  deletePlayer\n} from '../../utils/apiCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      teamsResponse: [],\n      playersResponse: [],\n      playerResponse: {},\n      teamResponse: {},\n      rosterResponse: [],\n      postPlayerResponse: {},\n      postTeamResponse: {},\n      deletePlayerResponse: {},\n      deletePlayerNum: null,\n      playerNum: null,\n      teamNum: null,\n      rosterNum: null,\n      teamname: null,\n      city: null,\n      logoUrl: null,\n      stadium: null,\n      name: null,\n      nationality: null,\n      photoUrl: null,\n      preferedFoot: null,\n      age: null,\n      team: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  setTeamsResponse = async () => {\n    const teamsResponse = await getTeams();\n    this.setState({ teamsResponse });\n  };\n\n  setTeamResponse = async () => {\n    const teamResponse = await getTeam(this.state.teamNum);\n    this.setState({ teamResponse });\n  };\n\n  setPlayersResponse = async () => {\n    const playersResponse = await getPlayers();\n    this.setState({ playersResponse });\n  };\n\n  setPlayerResponse = async () => {\n    const playerResponse = await getPlayer(this.state.playerNum);\n    this.setState({ playerResponse });\n  };\n\n  setRoster = async () => {\n    const rosterResponse = await getRoster(this.state.rosterNum);\n    this.setState({ rosterResponse });\n  };\n\n  clearTeamsResponse = () => this.setState({ teamsResponse: [] });\n\n  clearTeamResponse = () => this.setState({ teamResponse: {} });\n\n  clearPlayersResponse = () => this.setState({ playersResponse: [] });\n\n  clearPlayerResponse = () => this.setState({ playerResponse: {} });\n\n  clearRoster = () => this.setState({ rosterResponse: [] });\n\n  clearTeam = () =>\n    this.setState({ teamname: null, city: null, logoUrl: null, stadium: null });\n\n  clearDelete = () =>\n    this.setState({ deletePlayerNum: null, deletePlayerResponse: {} });\n\n  clearPostPlayerResponses = () => {\n    this.setState({\n      name: null,\n      nationality: null,\n      photoUrl: null,\n      preferedFoot: null,\n      age: null,\n      team: null,\n      postPlayerResponses: {}\n    });\n  };\n\n  makeTeam = async () => {\n    const { teamname, city, logoUrl, stadium } = this.state;\n    const team = { teamname, city, logoUrl, stadium };\n    const postTeamResponse = await createTeam(team);\n    this.setState({ postTeamResponse });\n  };\n\n  makePlayer = async () => {\n    const { name, nationality, photoUrl, preferedFoot, age, team } = this.state;\n    const player = { name, nationality, photoUrl, preferedFoot, age, team };\n    const postPlayerResponse = await createPlayer(player);\n    this.setState({ postPlayerResponse });\n  };\n\n  removePlayer = async () => {\n    const id = this.state.deletePlayerNum;\n    const res = await deletePlayer(id);\n    const deletePlayerResponse = ({response:res})\n\n    this.setState({ deletePlayerResponse });\n  };\n\n  render = () => {\n    return (\n      <>\n        <h1 className='main-title'>MLS 2019 API Documentation and Sandbox</h1>\n        <h2>This API allows you to retrieve data on the 2019 MLS teams and players.</h2>\n        <main>\n          <h2>API Endpoints</h2>\n          <p>Base URL: All URLs referenced in the documentation have the following base:</p>\n          <code>https://mls2019-api.herokuapp.com</code>\n          <div className='main__div--border'>\n            <h2>GET all teams <code>/api/v1/teams</code></h2>\n            <h3>Response Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Unique team identifier.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>teamname</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of MLS team.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>stadium</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of the team's home stadium.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>logoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the team's logo.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>city</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>City location of the team's stadium</td>\n                </tr>\n              </tbody>\n            </table>\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/teams\n              </p>\n              <button type='button' onClick={this.setTeamsResponse}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearTeamsResponse}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.teamsResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>GET team by id or full team name  <code>/api/v1/teams/:id</code></h1>\n            <h3>Query Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code> / <code>string</code>\n                  </td>\n                  <td>Unique team identifier or full team name</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>Response Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Unique team identifier.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>teamname</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of MLS team.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>stadium</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of the team's home stadium.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>logoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the team's logo.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>city</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>City location of the team's stadium</td>\n                </tr>\n              </tbody>\n            </table>\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/teams/\n              </p>\n              <input\n                className='input__team-id'\n                placeholder=':id'\n                name='teamNum'\n                maxLength='40'\n                value={this.state.teamNum}\n                onChange={this.handleChange}\n              />\n              <button type='button' onClick={this.setTeamResponse}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearTeamResponse}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.teamResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>GET all player <code>/api/v1/players</code></h1>\n            <h3>Response Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Unique player identifier.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>name</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of player.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>nationality</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's country of origin.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>photoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the player's image.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>preferedFoot</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's dominate foot.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>age</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Player's age in years for the 2019 MLS season.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>team</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's team at the end of the 2019 MLS season.</td>\n                </tr>\n              </tbody>\n            </table>\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/players\n              </p>\n              <button type='button' onClick={this.setPlayersResponse}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearPlayersResponse}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.playersResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>GET player by id <code>/api/v1/players/:id</code></h1>\n            <h3>Query Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Unique player identifier.</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>Returns a specific player object.</th>\n              </tr>\n              <tr>\n                <th>404</th>\n                <th>\n                  <code>{`\"error\": \"There is a not player with an id of 1000\"`}</code>\n                </th>\n              </tr>\n            </table>\n\n            <h3>Response Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Unique player identifier.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>name</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of player.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>nationality</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's country of origin.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>photoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the player's image.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>preferedFoot</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's dominate foot.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>age</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Player's age in years for the 2019 MLS season.</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>team</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's team at the end of the 2019 MLS season.</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/players/\n              </p>\n              <input\n                className='input__player-id'\n                placeholder=':id'\n                name='playerNum'\n                maxLength='40'\n                value={this.state.playerNum}\n                onChange={this.handleChange}\n              />\n              <button type='button' onClick={this.setPlayerResponse}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearPlayerResponse}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.playerResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>GET a teams roster <code>/api/v1/teams/:id/roster</code></h1>\n            <h3>Query Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>id</code>\n                  </td>\n                  <td>\n                    <code>number</code> / <code>string</code>\n                  </td>\n                  <td>Unique team identifier or full team name</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>\n                  Returns an array of the player objects associated with a\n                  specific team.\n                </th>\n              </tr>\n              <tr>\n                <th>404</th>\n                <th>\n                  <code>\n                    {\n                      'error: `Requested team: ${id}. There is no record of that team`'\n                    }\n                  </code>\n                </th>\n              </tr>\n            </table>\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/teams/\n              </p>\n              <input\n                className='input__roster-id'\n                placeholder=':id'\n                name='rosterNum'\n                maxLength='40'\n                value={this.state.rosterNum}\n                onChange={this.handleChange}\n              />\n              <p>/roster</p>\n              <button type='button' onClick={this.setRoster}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearRoster}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.rosterResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>POST Add a team <code>/api/v1/teams</code></h1>\n            <h3>Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                  <th>Required</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>teamname</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of MLS team.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>stadium</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of the team's home stadium.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>logoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the team's logo.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>city</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>City location of the team's stadium</td>\n                  <td>Yes</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>Returns the new player object.</th>\n              </tr>\n              <tr>\n                <th>422</th>\n                <th>\n                  <code>\n                    {\n                      'error: `Expected format: { teamname: <String>, city: <String>, stadium: <Sring>, logoUrl: <String> }. You\\'re missing a \"${requiredParameter}\" property.` '\n                    }\n                  </code>\n                </th>\n              </tr>\n            </table>\n\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>GET</span> /api/v1/teams/\n              </p>\n              <div className='input-container'>\n                <input\n                  className='input__teamname multi-input'\n                  placeholder='Team Name'\n                  name='teamname'\n                  value={this.state.teamname}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__city multi-input'\n                  placeholder='City'\n                  name='city'\n                  value={this.state.city}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__stadium multi-input'\n                  placeholder='Stadium'\n                  name='stadium'\n                  value={this.state.stadium}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__logoUrl multi-input'\n                  placeholder='URL for team logo'\n                  name='logoUrl'\n                  maxLength='40'\n                  value={this.state.logoUrl}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <button type='button' onClick={this.makeTeam}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearTeam}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.postTeamResponse} theme='hopscotch' />\n          </div>\n\n          <div className='main__div--border'>\n            <h1>POST Add a player <code>/api/v1/players</code></h1>\n            <h2>PLAYERS CAN ONLY BE ADDED TO EXISTING TEAMS</h2>\n            <h3>Parameters</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Description</th>\n                  <th>Required</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>name</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Full name of player.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>nationality</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's country of origin.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>photoUrl</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>URL for the player's image.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>preferedFoot</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's dominate foot.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>age</code>\n                  </td>\n                  <td>\n                    <code>number</code>\n                  </td>\n                  <td>Player's age in years for the 2019 MLS season.</td>\n                  <td>Yes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>team</code>\n                  </td>\n                  <td>\n                    <code>string</code>\n                  </td>\n                  <td>Player's team</td>\n                  <td>Yes</td>\n                </tr>\n              </tbody>\n            </table>\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>Returns a specific player object.</th>\n              </tr>\n              <tr>\n                <th>404</th>\n                <th>\n                  <code>\n                    {\n                      'error: `Expected format: { name: <String>, age: <Int>, photoUrl: <String>, nationality: <String>, preferedFoot: <String>, team: <String>, }. You\\'re missing a \"${param}\" property.`'\n                    }\n                  </code>\n                </th>\n              </tr>\n            </table>\n            <div className='div__row player-post'>\n              <p>\n                Try it:<span className='bold'>POST</span> /api/v1/players\n              </p>\n              <p className='options'>Options:</p>\n              <div className='input-container'>\n                <input\n                  className='input__name multi-input'\n                  placeholder='Player Name'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__nationality multi-input'\n                  placeholder='Player Nationality'\n                  name='nationality'\n                  value={this.state.nationality}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__photoUrl multi-input'\n                  placeholder='Photo URL'\n                  name='photoUrl'\n                  value={this.state.photoUrl}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__preferedFoot multi-input'\n                  placeholder='Prefered Foot'\n                  name='preferedFoot'\n                  maxLength='40'\n                  value={this.state.preferedFoot}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__age multi-input'\n                  placeholder='Player Age'\n                  name='age'\n                  maxLength='3'\n                  value={this.state.age}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className='input__team multi-input'\n                  placeholder='Player Team'\n                  name='team'\n                  maxLength='40'\n                  value={this.state.team}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <button type='button' onClick={this.makePlayer}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearPlayer}>\n                Clear the field\n              </button>\n            </div>\n            <ReactJson src={this.state.postPlayerResponse} theme='hopscotch' />\n          </div>\n          <div className='main__div--border'>\n            <h2>DELETE a player <code>/api/v1/players</code></h2>\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>{'Player ${id} sucessfully deleted.'}</th>\n              </tr>\n              <tr>\n                <th>404</th>\n                <th>\n                  <code>{'No player with the id of ${id}'}</code>\n                </th>\n              </tr>\n            </table>\n            <h3>Response</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Response</th>\n                </tr>\n              </thead>\n              <tr>\n                <th>200</th>\n                <th>\n                  Returns an array of the player objects associated with a\n                  specific team.\n                </th>\n              </tr>\n              <tr>\n                <th>404</th>\n                <th>\n                  <code>\n                    {\n                      'error: `Requested team: ${id}. There is no record of that team`'\n                    }\n                  </code>\n                </th>\n              </tr>\n            </table>\n            <div className='div__row'>\n              <p>\n                Try it:<span className='bold'>DELETE</span> /api/v1/players/\n              </p>\n              <input\n                className='input__del-player-num-id'\n                placeholder=':id'\n                name='deletePlayerNum'\n                maxLength='4'\n                value={this.state.deletePlayerNum}\n                onChange={this.handleChange}\n              />\n              <button type='button' onClick={this.removePlayer}>\n                Go!\n              </button>\n              <button type='button' onClick={this.clearDelete}>\n                Clear the field!\n              </button>\n            </div>\n            <ReactJson src={this.state.deletePlayerResponse} theme='hopscotch' />\n          </div>\n        </main>\n      </>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}